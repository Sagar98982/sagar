struct student
{
int roll;
    
float marks;
    
char name[10];
    

}
s1;

int main()                                    
{
   
// struct student s1;
    
printf("enter the roll no");
    
scanf("%d",&s1.roll);
    
return 0;

}




struct student

{

int roll;
    

float marks;
    

char name[10];
    

};



int main()                                   (roll no print)                  

{
   
 
struct student s;
    

printf("enter the roll no");
    

scanf("%d",&s.roll);
    

return 0;

}





struct student

{

int rollno;

float marks;

char name[10];

};

  
int main() {
    
struct student s[2];
    
int i;
   
//printf("enter the value\n");
         (array of  structure=== 2 student ke marks,roll no,name print krega)
for(i=0;i<=1;i++)
   
{
       
       
scanf("%d",&s[i].rollno);
       
scanf("%f",&s[i].marks);
       
scanf("%s",&s[i].name);
   
}
   
for(i=0;i<=1;i++)
   
{
       
printf("%d\n",s[i].rollno);
       
       
printf("%f",s[i].marks);
   
}
   
    
    
return 0;

}





struct student
{
    
int rollno;
    
int marks[3];
    
char name[5];

};

int main() {
   
struct student s1;
   
int i;
   
printf("enter the roll no");
   
scanf("%d",&s1.rollno);
   
printf("enter the marks");
                 array with structure===marks,name,roll no print krega) 
for(i=0;i<=2;i++)
   
{
       
scanf("%d",&s1.marks[i]);
   
}
  
printf("enter the name");
  
scanf("%s",&s1.name);
   
   
   
   
for(i=0;i<=2;i++)
   
{
       
printf("%d\n",s1.marks[i]);
   
}
   
   
printf("%s\n",s1.name);
   
printf("%d\n",s1.rollno);
    
return 0;

}





struct student

{
    

int rollno;
    

int marks[3];

     

 

};


int main() 
{
  
char name[5];  

struct student s1;
   


int i;
                             ( array with structure ===   sub ok print ho rha h=== char[5] ka issue solve)
printf("enter the name");
   
scanf("%s",&name);

printf("enter the roll no");
   

 scanf("%d",&s1.rollno);
   

 printf("enter the marks");
                 

for(i=0;i<=2;i++)
   

{
       

scanf("%d",&s1.marks[i]);
   

}
  

//printf("enter the name");
  

//scanf("%s",&s1.name);
  
   

for(i=0;i<=2;i++)
   

{
       

printf("%d\n",s1.marks[i]);
   

}
   
   

//printf("%s",s1.name);
   

printf("%d\n",s1.rollno);

printf("%s",name);
    

return 0;

}
















struct student
{
    

int rollno;
    

int marks[3];
    

char name[5];


};


int main() 
{
   

struct student s1[2];
   

int i,j;
   


 
for(j=0;j<2;j++) 
 
 
{
    
 printf("enter the roll no");          (  array with structure of array of struccture  2 student ==== marks print)
 scanf("%d",&s1[j].rollno);


printf("enter the name");
  


scanf("%s",&s1[j].name);

   
 
printf("enter the marks");
                 

for(i=0;i<=2;i++)
  

{
       

scanf("%d",&s1[j].marks[i]);
   

}

}

printf("\n ");

for(j=0;j<=1;j++)

{

for(i=0;i<=2;i++)
  

{
       

printf("%d\n",s1[j].marks[i]);
}
}   







struct address

{
    

int streetno;
    

int houseno;
    

int pinno;
    

char city[];
    


};




struct student

{
    

int rollno;
    

int marks;
                               
 
char name[5];
   

struct address ai;
                   (nested structure)
};


int main() {
    

struct student s1;
   

 printf("enter the roll no");
   

  scanf("%d",&s1.rollno);
   

printf(" roll no %d\n",s1.rollno);
  
 printf("enter the marks");
  

scanf("%d",&s1.marks);

  

printf(" marks are %d\n",s1.marks);


printf("enter the name");

scanf("%s",&s1.name);

printf("%s\n",s1.name);

  
printf("enter the pin no");


scanf("%d",&s1.ai.pinno);

 
printf("%d\n",s1.ai.pinno);
 
 
printf("enter the street no");
 
scanf("%d",&s1.ai.streetno);
   
   

printf("%d\n",s1.ai.streetno);
   
printf("enter the city");
   
scanf("%s",&s1.ai.city);
    
printf("%s",s1.ai.city);
    

return 0;
}










struct student
{
    
int rollno;
    
int marks;
    

};

int main()
{
    
struct student s;
    
struct student *p;
                   (structure ka address print ==== roll no , marks  [ 1st method  )
p=&s;
    
s.rollno=1;
    
s.marks=60;
    
printf("%p",p);
    
printf("%d",(*p).rollno);
    
printf("%d",(*p).marks);
    
    
    

}






struct student
{
    
int rollno;
    
int marks;
    

};

int main()
{
    
struct student s;
    
struct student *p;
                (structure ka address print == rollno, marks  [ 2nd method ]
p=&s;
 
printf("enter the rollno");
 
scanf("%d",&p->rollno);
 
printf("enter the marks");
 
scanf("%d",&p->marks);
 
  
printf("%d\n",p->rollno);
  
printf("%d",p->marks);
    
    

}







int c1=1;


int count()
{
    
c1++;
    
return c1;

}

int main() {
                   (isme global variable m ==== 2 and 3 print ho rha h)
int j=count();
    
printf("%d\n",j);
   
int i= count();
    
printf("%d",i);
    
    
return 0;

}






int count()
{
    
int c1=1;
    
c1++;
    
return c1;

}

int main() {
                  (isme local variable m ==== 2 and 2 print ho rha h)
int j=count();
    
printf("%d\n",j);
   
int i= count();
    
printf("%d",i);
    
    
return 0;

}




int count()
{
    
int c1=1;
    
c1++;
    
return c1;

}

int main() 
{
    
int c1=1;
                       (isme loacal or global dono variable m ==== 2 and 2 print)
int j=count();
    
printf("%d\n",j);
   
int i= count();
    
printf("%d",i);
    
   
 return 0;
}




int count()
{
   
static int c1=1;
    
c1++;
    
return c1;

}

int main() {
                  ( static m === 2 and 3 print)
//int c1=1;
                   
int j=count();
    
printf("%d\n",j);
   
int i= count();
    
printf("%d",i);
    
    
return 0;

}



 static int count1=1;

int count()
{

int a=5;
    
count1++;
    
return count1;
               (static me === 2 and 3 print) 	
}

int main() {
    
//int c1=1;
    
    
int j=count();
    
printf("%d\n",j);
   
int i= count();
    
printf("%d",i);
    
    
return 0;

}







int sum(int a,int b)
{
   
// printf("enter the value of a");
    
//scanf("%d",&a);
   
// printf("enter the value of b ");
    
//scanf("%d",&b);
    
return a+b;
                                  (function calling ka address== using pointer)
}

int main()
{
    
    
int (*p)(int,int );
    
int j= p(10,20);
   
printf("%d",j);

}





const int count1=1;


int main() {
    
//int c1=1;
    
printf("enter the  value");
                    (constant === 1 print  and  not by  printf and scanf )
//scanf("%d",&count1);
    
count1++;
    
printf("%d",count1);
    
return 0;

}